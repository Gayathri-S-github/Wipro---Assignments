1 File : Count Character Write a program to count the number of times a character appears in the File.
(Case insensitive... 'a' and 'A' are considered to be the same) 
 Sample Output: 
Enter the file name
 Input.txt 
Enter the character to be counted
 r 
File 'Input.txt' has 99 instances of letter 'r'.
Program:

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class CountOfCharInFile {

	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the file name");
		String filename = sc.nextLine();
		System.out.println("Enter the character to be counted");
		char needle = sc.nextLine().charAt(0);
	
		File file = new File(filename);
		int charCount = 0;
		
		BufferedReader br = new BufferedReader(new FileReader(file));
		
		int ch;
		do {
			ch = br.read();
			
			if (ch >= 65 && ch <= 90) ch += 32;
			if (needle >= 65 && needle <= 90) needle += 32;
			
			if (ch == needle)
				charCount++;
		} while (ch != -1);
				
		System.out.println("File '" + filename + "' has " +
				charCount + " instances of letter '" + needle + "'.");
		
		br.close();
		sc.close();
	}

}


2 .File Copy Write a program to copy from one file to another. 
 
Sample Input and Output:
 Enter the input file name Input.txt 
Enter the output file name Output.txt 
Program:
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
 
public class FileCopyExample
 {
 
	public static void main(String[] args) {
 
		try {
			FileReader fr = new FileReader("JavaIntro.txt");
			BufferedReader br = new BufferedReader(fr);
			FileWriter fw = new FileWriter("output.txt", true);
			String s;
 
			while ((s = br.readLine()) != null)
				 { // read a line
				fw.write(s); // write to output file
				fw.write("\n");
				fw.flush();
				}
			br.close();
			fw.close();

                        System.out.println("file copied");
		} 


catch (IOException e) 
{
	// TODO Auto-generated catch block
	e.printStackTrace();
}

}
}


3. File Word Count Implement a code to count the occurrences of each word in an input file and write the word along with corresponding count in an output file sorted by the words alphabetically.  
(Hint : Use Map as an intermediate collection) 
Sample Input inputFile.txt 
Manoj works at Wipro 
Katari works at Wipro 
Sureka works at Wipro 
Harish works at Wipro 
Anitha works at Wipro 
Janani works at Wipro 
Sample Output D:\>Java FileWordCount 
inputFile.txt 
outputFile.txt
 outputFile.txt 
Anitha : 1 
Harish : 1 
Janani : 1 
Katari : 1 
Manoj : 1 
Sureka : 1 
Wipro : 6 
at : 6 
works : 6

Program:
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

public class WordCounter {

    public static void main(String[] file) throws FileNotFoundException, IOException {

        if (file.length == 0) {

            System.out.println("Usage: java WordCounter targetfile");

            System.exit(0);

        }
         BufferedReader bufferedReader = null;

        bufferedReader = new BufferedReader(new FileReader(file[0]));

        String inputLine = null;

        TreeMap<String, Integer> map = new TreeMap<String, Integer>();

        try {

            while ((inputLine = bufferedReader.readLine()) != null) {

            String[] words = inputLine.split("[ \n\t\r.,;:!?(){}]");

                for (int wordCounter = 0; wordCounter < words.length; wordCounter++) {

                    String key = words[wordCounter].toLowerCase();

                    if (key.length() > 0) {

                        if (map.get(key) == null) {

                            map.put(key, 1);

                        }

                        else {

                            int value = map.get(key).intValue();

                            value++;

                            map.put(key, value);

                        }

                    }

                    Set<Map.Entry<String, Integer>> entrySet = map.entrySet();

                    for (Map.Entry<String, Integer> entry : entrySet) {

                        System.out.println(entry.getValue() + "\t" + entry.getKey());

                    }
 
                }          

            }

        }

        catch (IOException error) {

            System.out.println("Invalid File"); 

        }

        finally {

            bufferedReader.close();
 
        }

    }

}
